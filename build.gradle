buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:5.3.0'
  }
}

plugins {
  id 'java-library'
  id 'jacoco'
  id 'signing'
  id 'maven-publish'
  id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}
apply plugin: 'biz.aQute.bnd.builder'


def getVersionName() {
  def errOut = new ByteArrayOutputStream()
  try {
    def stdOut = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'describe', '--tags'
      standardOutput = stdOut
      errorOutput = errOut
    }
    // strip of leading 'v'
    return stdOut.toString().trim().substring(1)
  } catch (ignore) {
    logger.info('Error running git describe (' + errOut.toString().trim() + '), defaulting to 0.0.0')
    return '0.0.0'
  }
}


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
project.group = 'org.pharmgkb'
project.version = getVersionName()

ext {
  baseName = 'vcf-parser'
  moduleName = 'org.pharmgkb.vcf-parser'
  description = 'A strict streaming parser for VCF 4.1/4.2.'
  url = 'https://github.com/PharmGKB/vcf-parser.git'
  scm = 'scm:git@github.com:PharmGKB/vcf-parser.git'
  orgName = 'PharmGKB'
  orgUrl = 'https://www.pharmgkb.org'
  // grab properties from environment for CI
  sonatypeUser = project.hasProperty('ossrhUsername') ? ossrhUsername : System.getenv('OSSRH_USERNAME')
  sonatypePwd  = project.hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('OSSRH_PASSWORD')
  sonatypeStagingProfileId = project.hasProperty('ossrhStagingProfileId') ? ossrhPassword : System.getenv('OSSRH_STAGING_PROFILE_ID')
}

// cannot modify signing directly, have to do it like this
// reference: https://getstream.io/blog/publishing-libraries-to-mavencentral-2021/
ext['signing.keyId'] = ''
ext['signing.password'] = ''
ext['signing.secretKeyRingFile'] = ''
if (System.getenv('SIGNING_KEY')) {
  ext['signing.key'] =  System.getenv('SIGNING_KEY')
  ext['signing.password'] = System.getenv('SIGNING_PASSWORD')
}  else if (project.hasProperty('gpg.key')) {
  ext['signing.key'] =  project.getProperty('gpg.key')
  ext['signing.password'] = project.getProperty('gpg.password')
}  else if (project.hasProperty('gpg.keyId')) {
  ext['signing.keyId'] =  project.getProperty('gpg.keyId')
  ext['signing.password'] = project.getProperty('gpg.password')
  ext['signing.secretKeyRingFile'] =  project.getProperty('gpg.secretKeyRingFile')
} else if (System.getenv('SIGNING_KEY_ID') != null) {
  ext['signing.keyId'] =  System.getenv('SIGNING_KEY_ID')
  ext['signing.password'] = System.getenv('SIGNING_PASSWORD')
  ext['signing.secretKeyRingFile'] =  System.getenv('SIGNING_SECRET_KEY_RING_FILE')
}


repositories {
  mavenCentral()
}

dependencies {
  implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
  implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
  implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
  implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'

  testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.8.2'
  testImplementation group: 'org.pharmgkb', name: 'pgkb-common', version: '0.5.2'
}

apply from: 'pgkb-build.gradle'
